{"version":3,"sources":["data/sampleCode.js","components/TextEditor/TextEditor.js","components/Run/Run.js","components/LanguageSelector/LanguageSelector.js","components/Result/Result.js","App.js","reportWebVitals.js","index.js"],"names":["SAMPLE_CODE","javascript","python","cpp","TextEditor","language","codeChange","useEffect","style","border","height","theme","defaultLanguage","value","onChange","useStyles","makeStyles","root","textColor","margin","spacing","minWidth","ContainedButtons","code","setResult","onLoading","onError","classes","className","marginTop","Button","variant","onClick","fetch","getRoute","method","body","JSON","stringify","headers","then","res","json","data","output","message","Boolean","isError","formControl","selectEmpty","LanguageSelector","changeLanguage","React","useState","setValue","display","FormControl","InputLabel","id","Select","labelId","event","target","label","MenuItem","Result","loading","match","length","disabled","App","onLanguageChange","setState","oncodeChange","onResult","state","this","Component","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.116d999b.chunk.js","sourcesContent":["export const SAMPLE_CODE = {\n  javascript: `// Sample Code \\n\\nconsole.log(\"Domain Changed!!!\");`,\n  python: `# Sample Code \\n\\nprint(\"Hello World\")`,\n  cpp: `// Sample Code \\n\\n#include<iostream>\\nusing namespace std;\\n\\nint main() {\\n\\tcout << \"Hello World\" << endl;\\n\\treturn 0;\\n}`,\n};\n","import React, { useEffect } from \"react\";\nimport Editor from \"@monaco-editor/react\";\nimport { SAMPLE_CODE } from \"../../data/sampleCode\";\n\nconst TextEditor = ({ language, codeChange }) => {\n  useEffect(() => {\n    codeChange(SAMPLE_CODE[language]);\n  }, [language, codeChange]);\n\n  return (\n    <div style={{ border: \"2px solid black\" }}>\n      <Editor\n        height=\"50vh\"\n        theme=\"vs-dark\"\n        defaultLanguage=\"javascript, cpp, python\"\n        language={language}\n        value={SAMPLE_CODE[language]}\n        onChange={codeChange}\n      />\n    </div>\n  );\n};\nexport default TextEditor;\n","import React from \"react\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport Button from \"@material-ui/core/Button\";\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    textColor: \"green\",\n    \"& > *\": {\n      margin: theme.spacing(2),\n      minWidth: 120,\n    },\n  },\n}));\n\nexport default function ContainedButtons({\n  code,\n  language,\n  setResult,\n  onLoading,\n  onError,\n}) {\n  const classes = useStyles();\n  const executeCode = () => {\n    onLoading(true);\n    setResult(\"\");\n    fetch(`https://rce.manishk.dev/${getRoute(language)}`, {\n      method: \"POST\",\n      body: JSON.stringify({ code }),\n      headers: { \"Content-Type\": \"application/json\" },\n    })\n      .then((res) => res.json())\n      .then((data) => {\n        onLoading(false);\n        if (data.output) setResult(data.output);\n        else setResult(data.message);\n        onError(Boolean(data.isError) || !Boolean(data.output));\n      });\n  };\n\n  return (\n    <div className={classes.root} style={{ marginTop: \"2px\" }}>\n      <Button variant=\"contained\" onClick={executeCode}>\n        RUN\n      </Button>\n    </div>\n  );\n}\n\nconst getRoute = (language) => {\n  switch (language) {\n    case \"cpp\":\n      return \"execCpp\";\n    case \"javascript\":\n      return \"execNode\";\n    case \"python\":\n      return \"execPython\";\n    default:\n      return \"\";\n  }\n};\n","import React from \"react\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport InputLabel from \"@material-ui/core/InputLabel\";\nimport MenuItem from \"@material-ui/core/MenuItem\";\n// import FormHelperText from \"@material-ui/core/FormHelperText\";\nimport FormControl from \"@material-ui/core/FormControl\";\nimport Select from \"@material-ui/core/Select\";\n\nconst useStyles = makeStyles((theme) => ({\n  formControl: {\n    margin: theme.spacing(2),\n    minWidth: 120,\n  },\n  selectEmpty: {\n    marginTop: theme.spacing(1),\n  },\n}));\n\nexport default function LanguageSelector({ changeLanguage }) {\n  const classes = useStyles();\n  const [value, setValue] = React.useState(\"javascript\");\n\n  const handleChange = (event) => {\n    changeLanguage(event.target.value);\n    setValue(event.target.value);\n  };\n\n  return (\n    <div style={{ display: \"flex\" }}>\n      <div>\n        <FormControl variant=\"outlined\" className={classes.formControl}>\n          <InputLabel id=\"demo-simple-select-outlined-label\">\n            Language\n          </InputLabel>\n          <Select\n            labelId=\"demo-simple-select-outlined-label\"\n            id=\"demo-simple-select-outlined\"\n            value={value}\n            onChange={handleChange}\n            label=\"Language\"\n          >\n            <MenuItem value={\"cpp\"}>CPP</MenuItem>\n            <MenuItem value={\"javascript\"}>JavaScript</MenuItem>\n            <MenuItem value={\"python\"}>Python</MenuItem>\n          </Select>\n        </FormControl>\n      </div>\n    </div>\n  );\n}\n","import React from \"react\";\nimport \"./Result.css\";\n\nconst Result = ({ output, loading, isError }) => {\n  const calcHeight = (value) => {\n    let numberOfLineBreaks = (value.match(/\\n/g) || []).length;\n    let newHeight = 20 + numberOfLineBreaks * 20 + 30 + 2;\n    return newHeight;\n  };\n\n  return (\n    <div className=\"result-container\">\n      <h2>Output</h2>\n      <h3>{loading && \"Loading...\"}</h3>\n      {output && (\n        <textarea\n          className={isError ? \"error\" : \"success\"}\n          value={output}\n          style={{ height: calcHeight(output) }}\n          disabled\n        />\n      )}\n    </div>\n  );\n};\n\nexport default Result;\n","import React, { Component } from \"react\";\n\nimport TextEditor from \"./components/TextEditor/TextEditor\";\nimport Run from \"./components/Run/Run\";\nimport LanguageSelector from \"./components/LanguageSelector/LanguageSelector\";\nimport Result from \"./components/Result/Result\";\n\nclass App extends Component {\n  constructor() {\n    super();\n    this.state = {\n      language: \"javascript\",\n      code: \"\",\n      output: \"\",\n      loading: false,\n      isError: false,\n    };\n  }\n  onLanguageChange = (language) => {\n    this.setState({ language: language });\n  };\n\n  oncodeChange = (code) => {\n    this.setState({ code });\n  };\n\n  onResult = (output) => {\n    this.setState({ output });\n  };\n\n  onLoading = (loading) => {\n    this.setState({ loading });\n  };\n\n  onError = (isError) => {\n    this.setState({ isError });\n  };\n\n  render() {\n    return (\n      <div>\n        <div style={{ display: \"flex\" }}>\n          <LanguageSelector changeLanguage={this.onLanguageChange} />\n          <Run\n            code={this.state.code}\n            language={this.state.language}\n            setResult={this.onResult}\n            onLoading={this.onLoading}\n            onError={this.onError}\n          />\n        </div>\n        <TextEditor\n          language={this.state.language}\n          codeChange={this.oncodeChange}\n        />\n        <Result\n          isError={this.state.isError}\n          output={this.state.output}\n          loading={this.state.loading}\n        />\n      </div>\n    );\n  }\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}